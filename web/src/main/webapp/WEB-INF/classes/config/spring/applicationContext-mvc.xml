<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd"
       default-lazy-init="false">
    <!-- Activates various annotations to be detected in bean classes: Spring's
        @Required and @Autowired, as well as JSR 250's @Resource. -->
    <!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
    <context:component-scan base-package="com.ai"/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <!--<ref bean="cipherHttpMessageConverter"/>-->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="features">
                    <list>
                        <value>WriteDateUseDateFormat</value>
                        <value>WriteEnumUsingToString</value>
                        <value>WriteNonStringKeyAsString</value>
                        <value>QuoteFieldNames</value>
                        <value>SkipTransientField</value>
                        <value>SortField</value>
                        <value>DisableCircularReferenceDetect</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:resources location="/static/" mapping="/static/**"/>

    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
    </bean>
    
    
    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 指定所上传文件的总大小不能超过8MB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
        <property name="maxUploadSize" value="8388608"/>
        <property name="maxInMemorySize" value="1388608"/>
    </bean>
    
    <import resource="thymleaf-mvc.xml"/>
    <import resource="applicationContext-jobs.xml"/>
    
    
    <!-- 异常处理 -->
    <!-- <bean id="exceptionResolver" class="com.ai.core.exceptions.MyExceptionHandler">
        <property name="defaultErrorView">
            <value>exception/showDefaultError</value>
        </property>
        <property name="exceptionMappings">
            <props>
                这里你可以根据需要定义N多个错误异常转发
                <prop key="com.ai.core.exceptions.BaseCommonException">exception/showError</prop>
                <prop key="com.ai.core.exceptions.ExceptionCp">exception/showError</prop>
            </props>
        </property>
    </bean> -->
    
    <!-- 全局异常配置 start -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">     
         <property name="exceptionMappings">     
             <props>
             	 <prop key="java.lang.Throwable">/static/error.html</prop>      
                 <prop key="java.lang.Exception">/static/error.html</prop>     
                 <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">/static/error.html</prop>  
                 <prop key="javax.xml.ws.WebServiceException">/static/error.html</prop>    
             </props>     
         </property>     
         <property name="statusCodes">     
             <props>     
                 <prop key="error_ws">500</prop>        
             </props>     
         </property>     
         <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息      -->
         <property name="warnLogCategory" value="WARN"></property>     
         <!--默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置     -->
         <property name="defaultErrorView" value="error_ws"></property>     
         <!--默认HTTP状态码     -->
         <property name="defaultStatusCode" value="500"></property>     
     </bean>
    
    
    
    
    <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/new/**"/> 
    		<mvc:exclude-mapping path="/new/auth"/>
    		<mvc:exclude-mapping path="/new/getQuestionData"/>
    		<mvc:exclude-mapping path="/new/insertRecord"/>
    		<mvc:exclude-mapping path="/new/updateUserToOner"/>
   			<bean class="com.ai.core.util.Interceptor.HelloWorldInterceptor" />
	  	</mvc:interceptor>
   	</mvc:interceptors>
   	
   	
</beans>